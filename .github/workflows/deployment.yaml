name: Docker-compose

on:
  push:
    branches:
      - main
env:
  BUILD_NAME: "${{ vars.APP_NAME }}:${{ vars.APP_VERSION }}"
jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build docker image
        run: docker build -t ${{ env.BUILD_NAME }} .

      - name: Run docker container
        run: docker run --name qqq -d -p ${{ vars.APP_PORT }}:${{ vars.APP_PORT }} ${{ env.BUILD_NAME }}

      - name: Wait for port 8080 to be busy
        run: |
          echo "Checking if port 8080 is busy..."
          for i in {1..10}; do
            if curl --silent --output /dev/null http://localhost:8080; then
              echo "Port 8080 is busy."
              exit 0
            fi
            echo "Port 8080 is not busy yet. Retrying in 1 second..."
            sleep 1
          done
          echo "Port 8080 did not become busy after 10 seconds."
          exit 1



      #      - name: Send Slack Notification on Success
      #        if: success()
      #        run: |
      #          curl -X POST -H 'Content-type: application/json' \
      #          --data '{"text":"Build Success! Docker Image: yourusername/spring-boot-app:latest"}' \
      #          ${{ secrets.SLACK_WEBHOOK_URL }}
      #
      #      # Notify Slack on Failure
      #      - name: Send Slack Notification on Failure
      #        if: failure()
      #        run: |
      #          curl -X POST -H 'Content-type: application/json' \
      #          --data '{"text":"Build Failed! Docker Image: yourusername/spring-boot-app:latest"}' \
      #          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Check app
        run: |
          echo "checUrl: $CHECK_URL"
          RESPONSE_STATUS=$(curl --write-out "%{http_code}" --silent --output /dev/null "$CHECK_URL")
          echo "response status: $RESPONSE_STATUS"
          if [ "$RESPONSE_STATUS" -eq 200 ]; then
            echo "successful with status = $RESPONSE_STATUS"
          else
            echo "error with status = $RESPONSE_STATUS"
            exit 1
          fi
        env:
          CHECK_URL: ${{ vars.CHECK_URL }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/arthurf-java/${{ env.BUILD_NAME }}

#      - name: Slack Notification on Success
#        if: success()
#        uses: 8398a7/action-slack@v3
#        with:
#          status: success
#          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
#
#      - name: Slack Notification on Failure
#        if: failure()
#        uses: 8398a7/action-slack@v3
#        with:
#          status: failure
#          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Slack Notification
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: md-sa2-30-24
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Post Content :rocket:'
          SLACK_TITLE: 'Deploy is done'
          SLACK_USERNAME: fonichkin
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }} ### full address with https://.....

      - name: Slack Notification
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: md-sa2-30-24
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_TITLE: 'Deploy failed'
          SLACK_USERNAME: fonichkin
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }} ### full address with https://.....